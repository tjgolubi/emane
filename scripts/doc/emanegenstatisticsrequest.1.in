.TH emanegenstatisticsrequest 1 "@RELDATE@" "emanegenstatisticsrequest @VERSION@"
.SH NAME
emanegenstatisticsrequest - EMANE statistic request generator
.SH SYNOPSIS
emanegenstatisticsrequest [OPTIONS]...
.SH DESCRIPTON
.P
Application generates a STATISTICS_REQUEST event, sends it out to the specified address and waits for a STATISTICS_RESPONSE event. Upon reception of the STATISTICS_RESPONSE event, the data is parsed and displayed (or stored) based on the supplied XML mapping and options.
.SH OPTIONS
.P
The following options are supported:
.TP
.B \--xml XML
Specifies the file name of the XML mapping (generated by emanegenstatisticsxml).
.br
Default: statistics_definition.xml
.TP
.B \--file FILE
Specifies filename to store the received data in.
.br
Default: None (output is directed to the screen).
.TP
.B \--wait SECONDS
Specifies the amount of time to wait for the STATISTICS_RESPONSE event.
.br
Default: 15
.TP
.B \--nem NEMID
Specifies the NEM ID to send the STATISTICS_REQUEST event to.
.br
Default: 0 (all).
.TP
.B \--platform PLATFORMID
Specifies the PLATFORM ID to send the STATISTICS_REQUEST event to.
.br
Default: 0 (all).
.TP
.B \--layer COMPONENT_TYPE
Specifies the COMPONENT_TYPE to send the STATISTICS_REQUEST event to.
.br
Default: 0 (all).
.TP
.B \--group IP_ADDRESS
Specifies the IP address to send the STATISTICS_REQUEST event to.
.br
Default: 224.1.2.8
.TP
.B \--port NUMBER
Specifies the port number to send the STATISTICS_REQUEST event to.
.br
Default: 45703
.TP
.B \--verbose
Enable verbose output.
.TP
.B \--help
Print usage information and exit.
.SH Example
 Example application command line:
.RS
emanegenstatisticsrequest --wait 5 --xml woot.xml
.RE
.P
 Example received STATISTICS_RESPONSE formatted output:
.RS
.nf

NEM 31 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Downstream packets processed = 16
NEM 31 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Upstream packets processed = 0
NEM 31 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Downstream control messages processed = 0
NEM 31 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Event messages processed = 12

NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of enqueued bytes = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of overflowed packets = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: High-water mark = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 16
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of enqueued bytes = 3487
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 16
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of overflowed packets = 0
NEM 31 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: High-water mark = 2

NEM 31 COMPONENT_MACLAYER (REGISTERED_NONE) :: Downstream packets processed = 16
NEM 31 COMPONENT_MACLAYER (REGISTERED_NONE) :: Upstream packets processed = 0
NEM 31 COMPONENT_MACLAYER (REGISTERED_NONE) :: Downstream control messages processed = 0
NEM 31 COMPONENT_MACLAYER (REGISTERED_NONE) :: Upstream control messages processed = 0
NEM 31 COMPONENT_MACLAYER (REGISTERED_NONE) :: Event messages processed = 12

NEM 33 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Downstream packets processed = 0
NEM 33 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Upstream packets processed = 16
NEM 33 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Downstream control messages processed = 0
NEM 33 COMPONENT_PHYLAYER (REGISTERED_NONE) :: Event messages processed = 12

NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 16
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of enqueued bytes = 2959
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 16
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of overflowed packets = 0
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: High-water mark = 2
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 0
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of enqueued bytes = 0
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of dequeued packets = 0
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: Number of overflowed packets = 0
NEM 33 COMPONENT_PHYILAYER (REGISTERED_EMANE_PHY_RF_PIPE) :: High-water mark = 0

NEM 33 COMPONENT_MACLAYER (REGISTERED_NONE) :: Downstream packets processed = 0
NEM 33 COMPONENT_MACLAYER (REGISTERED_NONE) :: Upstream packets processed = 16
NEM 33 COMPONENT_MACLAYER (REGISTERED_NONE) :: Downstream control messages processed = 0
NEM 33 COMPONENT_MACLAYER (REGISTERED_NONE) :: Upstream control messages processed = 0
NEM 33 COMPONENT_MACLAYER (REGISTERED_NONE) :: Event messages processed = 12

.fi
.RE
.SH VERSION
@VERSION@
.SH BUGS
To report a bug, please send and email to <labs at cengen dot com>
.SH SEE ALSO
emane(1) emanegenstatisticsxml(1) 
.SH AUTHORS
DRS CenGen, LLC Columbia, MD
.br 
http://cengen.com
.SH NOTES
.P
EMANE is released under the BSD License.
